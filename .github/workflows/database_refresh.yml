name: AWS Database Refresh

permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    inputs:
      oracle_db_refresh_db_name:
        description: 'Oracle Database Name'
        required: true
        type: string
      oracle_db_refresh_file:
        description: 'Oracle Database Control File Name'
        required: true
        type: string
      source_ansible_group:
        description: 'Source Ansible Group'
        required: true
        type: string
      target_ansible_group:
        description: 'Target Ansible Group'
        required: true
        type: string
      target_account_role:
        description: 'Target AWS Account Role'
        required: true
        type: string
      source_account_role:
        description: 'Source AWS Account Role'
        required: true
        type: string
    secrets:
      source_account_id:
        description: 'Source AWS Account ID'
        required: true
      target_account_id:
        description: 'Target AWS Account ID'
        required: true
      dso_github_pat:
        description: 'DSO GitHub Personal Access Token'
        required: true

jobs:
  get_control_file_name:
    name: Get Oracle Control File Name
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: "arn:aws:iam::${{ secrets.source_account_id }}:role/${{ inputs.source_account_role }}"
          role-session-name: "github-${{ github.repository_id }}-${{ github.run_id }}-1"
          aws-region: eu-west-2
      - name: Checkout MP Configuration Management Repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          token: ${{ secrets.dso_github_pat }}
          ref: main
          path: configuration-management
          fetch-depth: 1
      - name: Setup Ansible
        run: |
          DEPENDENCIES=`cat requirements.txt | tr '\n' ' '`
          pipx inject ansible-core $DEPENDENCIES
          ansible-galaxy role install -r requirements.yml
          ansible-galaxy collection install -r requirements.yml
        working-directory: configuration-management/ansible
      - name: Run Ansible Ping
        run: |
          ansible -i hosts/instance_aws_ec2.yml -m ping ${{ inputs.source_ansible_group }}
        working-directory: configuration-management/ansible
      - name: Get Oracle Control File Name
        id: get_control_file_name
        run: |
          ansible -i hosts/instance_aws_ec2.yml \
            --module-name include_role \
            --args name=oracle-db-refresh \
            --extra-vars='ORACLE_DB_REFRESH_DB_NAME=${{ inputs.oracle_db_refresh_db_name }} ORACLE_DB_REFRESH_FILE=${{ inputs.oracle_db_refresh_file }}' \
            ${{ inputs.source_ansible_group }}
        working-directory: configuration-management/ansible
      - name: Upload control file
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: control_file
          path: ${{ inputs.oracle_db_refresh_file }}

  put_control_file_name:
    name: Download Oracle Control File Name
    runs-on: ubuntu-latest
    needs: get_control_file_name
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: "arn:aws:iam::${{ secrets.target_account_id }}:role/${{ inputs.target_account_role }}"
          role-session-name: "github-${{ github.repository_id }}-${{ github.run_id }}-2"
          aws-region: eu-west-2
      - name: Checkout MP Configuration Management Repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          token: ${{ secrets.dso_github_pat }}
          ref: main
          path: configuration-management
          fetch-depth: 1
      - name: Setup Ansible
        run: |
          DEPENDENCIES=`cat requirements.txt | tr '\n' ' '`
          pipx inject ansible-core $DEPENDENCIES
          ansible-galaxy role install -r requirements.yml
          ansible-galaxy collection install -r requirements.yml
        working-directory: configuration-management/ansible
      - name: Ping
        run: |
          ansible -i hosts/instance_aws_ec2.yml -m ping ${{ inputs.target_ansible_group }}
        working-directory: configuration-management/ansible
      - name: Download control file
        uses: actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe # v4.1.2
        with:
          name: control_file
      - name: Copy control file to target
        run: |
          ansible -i hosts/instance_aws_ec2.yml \
            --module-name copy \
            --args "src=${GITHUB_WORKSPACE}/${{ inputs.oracle_db_refresh_file }} dest=/tmp/${{ inputs.oracle_db_refresh_file }}" \
            ${{ inputs.target_ansible_group }}
        working-directory: configuration-management/ansible
      - name: Cat control file
        run: |
          cat ${{ inputs.oracle_db_refresh_file }}
