name: GitHub Workflow Monitoring

permissions:
  id-token: write
  contents: read

on:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  get_workflow_runs:
    name: Get Failed Workflow Runs and Update CloudMetric
    strategy:
      matrix:
        repository:
          - 'dso-infra-azure-ad'
    runs-on: ubuntu-latest
    steps:
      - name: Setup AWS Credemtials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: "arn:aws:iam::${{ fromJSON(secrets.MODERNISATION_PLATFORM_ENVIRONMENT_MANAGEMENT).account_ids['hmpps-oem-test'] }}:role/modernisation-platform-oidc-cicd"
          aws-region: eu-west-2
      - name: Get Workflow Runs
        id: get_failed_workflow_runs
        run: |
          DATE=$(date -d '1 day ago' '+%Y-%m-%dT%H:%M:%SZ')
          WORKFLOW_RUNS=$(curl -s -H "Authorization: Bearer ${{ secrets.DSO_GITHUB_PAT }}" \
            'https://api.github.com/repos/ministryofjustice/${{ matrix.repository }}/actions/runs?event=schedule&created=>='"$DATE")
          FAILED_WORKFLOW_RUNS=$(echo $WORKFLOW_RUNS | jq '[.workflow_runs[] | select(.conclusion == "failure") | .id] | length')
          if [ $FAILED_WORKFLOW_RUNS -gt 0 ]; then
            echo "${{ matrix.repository }} has ${FAILED_WORKFLOW_RUNS} failed workflow runs"
            echo "FAILED_WORKFLOW_RUNS=1" >> $GITHUB_OUTPUT
          else
            echo "FAILED_WORKFLOW_RUNS=0" >> $GITHUB_OUTPUT
          fi
      - name: Update CloudMetric with Failed Workflow Runs
        run: |
          aws cloudwatch put-metric-data \
            --metric-name FailedWorkflowRuns \
            --namespace CustomMetrics \
            --value ${{ steps.get_failed_workflow_runs.outputs.FAILED_WORKFLOW_RUNS }} \
            --dimensions Repository=${{ matrix.repository }} \
            --region eu-west-2
