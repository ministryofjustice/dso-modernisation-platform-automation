---
name: NOMIS Environment Start

on:
  workflow_dispatch:
    inputs:
      nomis_environment:
        type: choice
        description: Which nomis environment to start
        options:
          - t1
          - t2
          - t3
          - lsast
          - preprod
      weblogic_deployment:
        type: choice
        description: Which weblogic deployment to use
        default: auto
        options:
          - auto
          - a
          - b
      dryrun:
        type: choice
        description: Dryrun mode
        default: false
        options:
          - true
          - false

  schedule:
    - cron: "45 5 * * 1-5"  # T3 BST
    - cron: "45 6 * * 1-5"  # T3 GMT
    - cron: "50 5 * * 1-5"  # preprod BST
    - cron: "50 6 * * 1-5"  # preprod GMT

permissions:
  id-token: write
  contents: read

run-name: "NOMIS Environment Start (${{ inputs.nomis_environment }}${{ inputs.weblogic_deployment == 'auto' && '' || inputs.weblogic_deployment }}${{ inputs.dryrun == 'true' && ' dryrun)' || ')' }}"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      account_name: "${{ steps.parseinput.outputs.account_name }}"
      dryrun: "${{ steps.parseinput.outputs.dryrun }}"
      nomis_environment: "${{ steps.parseinput.outputs.nomis_environment }}"
      role_arn: "${{ steps.account.outputs.role_arn }}"
      script_flags: "${{ steps.parseinput.outputs.script_flags }}"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4
        with:
          ref: ${{ github.ref }}

      - name: Parse Workflow Inputs
        id: parseinput
        run: |
          account_name=
          nomis_environment=
          script_flags=
          dryrun=0
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            nomis_environment="${{ github.event.inputs.nomis_environment }}"
            if [[ "${{ github.event.inputs.dryrun }}" == "true" ]]; then
              script_flags="$script_flags -d"
              dryrun=1
            fi
            if [[ "${{ github.event.inputs.weblogic_deployment }}" != "auto" ]]; then
              script_flags="$script_flags -${{ github.event.inputs.weblogic_deployment }}"
            fi
          elif [[ "${GITHUB_EVENT_NAME}" == "schedule" ]]; then
            is_bst=1
            if [[ $(TZ=Europe/London date +%H) == $(date -u +%H) ]]; then
              is_bst=0
            fi
            if [[ "${cron_time}" == '45 5 * * 1-5' ]]; then
              if ((is_bst == 1)); then
                nomis_environment=t3
              fi
            elif [[ "${cron_time}" == '45 6 * * 1-5' ]]; then
              if ((is_bst == 0)); then
                nomis_environment=t3
              fi
            elif [[ "${cron_time}" == '50 5 * * 1-5' ]]; then
              if ((is_bst == 1)); then
                nomis_environment=preprod
              fi
            elif [[ "${cron_time}" == '50 6 * * 1-5' ]]; then
              if ((is_bst == 0)); then
                nomis_environment=preprod
              fi
            else
              echo "Unsupported schedule cron ${cron_time}"
              exit 1
            fi
          else
            echo "Unsupported event ${GITHUB_EVENT_NAME}"
            exit 1
          fi
          if [[ -n $nomis_environment ]]; then
            account_name=$(src/nomis/nomis_control.sh -z "$nomis_environment")
          fi
          echo "account_name=${account_name} nomis_environment=${nomis_environment} script_flags=${script_flags} dryrun=${dryrun}"
          echo "account_name=${account_name}" >> $GITHUB_OUTPUT
          echo "dryrun=${dryrun}" >> $GITHUB_OUTPUT
          echo "nomis_environment=${nomis_environment}" >> $GITHUB_OUTPUT
          echo "script_flags=${script_flags}" >> $GITHUB_OUTPUT

      - name: Get AWS Account Details
        id: account
        if: steps.parseinput.outputs.account_name != ''
        run: |
          echo "account name: ${{ steps.parseinput.outputs.account_name }}"
          account_id="${{ fromJSON(vars.MODERNISATION_PLATFORM_ENVIRONMENT_MANAGEMENT).account_ids[steps.parseinput.outputs.account_name] }}"
          role_arn="arn:aws:iam::${account_id}:role/modernisation-platform-oidc-cicd"
          echo "role arn:     ${role_arn}"
          echo "role_arn=${role_arn}" >> $GITHUB_OUTPUT

  get_nomis_environment_status:
    name: Get Nomis Environment Status
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      asg_name: "${{ steps.active_asg_stats.outputs.asg_name }}"
      desired_count: "${{ steps.active_asg_stats.outputs.desired_count }}"
      maintenance_mode: "${{ steps.active_asg_stats.outputs.maintenance_mode }}"
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502  # v4.0.2
        with:
          role-to-assume: "${{ needs.setup.outputs.role_arn }}"
          role-session-name: "github-${{ github.repository_id }}-${{ github.run_id }}-1"
          aws-region: eu-west-2

      - name: Checkout Repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4
        with:
          ref: ${{ github.ref }}

      - name: Get Active Weblogic ASG Stats
        id: active_asg_stats
        env:
          nomis_environment: "${{ needs.setup.outputs.nomis_environment }}"
          script_flags: "${{ needs.setup.outputs.script_flags }}"
        run: |
          asg_name=$(src/nomis/nomis_control.sh -n $script_flags "$nomis_environment")
          desired_count=$(src/nomis/nomis_control.sh -c $script_flags "$nomis_environment")
          maintenance_mode=$(src/nomis/nomis_control.sh -m $script_flags "$nomis_environment")
          echo "asg_name=${asg_name} desired_count=${desired_count} maintenance_mode=${maintenance_mode}"
          echo "asg_name=${asg_name}" >> $GITHUB_OUTPUT
          echo "desired_count=${desired_count}" >> $GITHUB_OUTPUT
          echo "maintenance_mode=${maintenance_mode}" >> $GITHUB_OUTPUT

  start_weblogic_instance:
    name: Start Weblogic Instance
    needs: [setup, get_nomis_environment_status]
    runs-on: ubuntu-latest
    if: needs.get_nomis_environment_status.outputs.desired_count == '0'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502  # v4.0.2
        with:
          role-to-assume: "${{ needs.setup.outputs.role_arn }}"
          role-session-name: "github-${{ github.repository_id }}-${{ github.run_id }}-1"
          aws-region: eu-west-2

      - name: Set ASG Desired Count
        env:
          asg_name: "${{ needs.get_nomis_environment_status.outputs.asg_name }}"
          dryrun: "${{ needs.setup.outputs.dryrun }}"
        run: |
          if [[ $dryrun == '0' ]]; then
            echo "aws autoscaling set-desired-capacity --desired-capacity 1 --auto-scaling-group-name '$asg_name'" >&2
            aws autoscaling set-desired-capacity --desired-capacity 1 --auto-scaling-group-name "$asg_name"
          else
            echo "Dry Run: aws autoscaling set-desired-capacity --desired-capacity 1 --auto-scaling-group-name '$asg_name'" >&2
          fi

  wait_for_healthy_instance:
    name: Wait for healthy Weblogic Instance
    needs: [setup, get_nomis_environment_status]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502  # v4.0.2
        with:
          role-to-assume: "${{ needs.setup.outputs.role_arn }}"
          role-session-name: "github-${{ github.repository_id }}-${{ github.run_id }}-1"
          aws-region: eu-west-2

      - name: Checkout Repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4
        with:
          ref: ${{ github.ref }}

      - name: Wait for healthy Weblogic Instance
        env:
          dryrun: "${{ needs.setup.outputs.dryrun }}"
          script_flags: "${{ needs.setup.outputs.script_flags }}"
          nomis_environment: "${{ needs.setup.outputs.nomis_environment }}"
        run: |
          healthy_instance_count=0
          n=30
          echo "Retrieving healthy instance count: src/nomis/nomis_control.sh -h $script_flags $nomis_environment"
          for i in $(seq 1 $n); do
            healthy_instance_count=$(src/nomis/nomis_control.sh -h $script_flags "$nomis_environment")
            if (( healthy_instance_count > 0 )); then
              echo "healthy_instance_count=${healthy_instance_count}"
              echo "healthy_instance_count=${healthy_instance_count}" >> $GITHUB_OUTPUT
              exit 0
            fi
            if [[ $dryrun != '0' ]]; then
              echo "healthy_instance_count=${healthy_instance_count}"
              echo "healthy_instance_count=${healthy_instance_count}" >> $GITHUB_OUTPUT
              exit 0
            fi
            echo "[$i/$n]: Waiting for healthy instance"
            sleep 60
          done
          echo "Timed out waiting for healthy instance" >&2
          exit 1

  disable_maintenance_mode:
    name: Disable Maintenance Mode
    needs: [setup, get_nomis_environment_status, wait_for_healthy_instance]
    runs-on: ubuntu-latest
    if: needs.get_nomis_environment_status.outputs.maintenance_mode == 'enabled'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502  # v4.0.2
        with:
          role-to-assume: "${{ needs.setup.outputs.role_arn }}"
          role-session-name: "github-${{ github.repository_id }}-${{ github.run_id }}-1"
          aws-region: eu-west-2

      - name: Checkout Repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4
        with:
          ref: ${{ github.ref }}

      - name: Disable Maintenance Mode
        env:
          script_flags: "${{ needs.setup.outputs.script_flags }}"
          nomis_environment: "${{ needs.setup.outputs.nomis_environment }}"
        run: |
          src/nomis/nomis_control.sh -0 $script_flags "$nomis_environment"
