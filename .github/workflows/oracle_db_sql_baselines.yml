name: Oracle DB SQL Plan Baseline Installation

on:
  workflow_dispatch:
    inputs:
      TargetDatabase:
        description: 'Primary Databases for installation of SQL Plan Baselines'
        default: ''
        type: choice
        options:
          - 'corporate_staff_rostering_preproduction PPIWFM'
          - 'corporate_staff_rostering_production    PIWFM'
          - 'delius_core_development_dev'
          - 'delius_core_test_test'
          - 'delius_mis_development_dev_mis'
          - 'delius_mis_development_dev_boe'
          - 'delius_mis_development_dev_dsd'
          - 'hmpps_oem_development                   EMREP'
          - 'hmpps_oem_development                   RCVCAT'
          - 'hmpps_oem_test                          EMREP'
          - 'hmpps_oem_test                          RCVCAT'
          - 'hmpps_oem_preproduction                 EMREP'
          - 'hmpps_oem_preproduction                 RCVCAT'
          - 'hmpps_oem_production                    EMREP'
          - 'hmpps_oem_production                    RCVCAT'
          - 'nomis_combined_reporting_test           T1BIPSYS'
          - 'nomis_combined_reporting_test           T1BISYS'
          - 'nomis_combined_reporting_test           T1BIPAUD'
          - 'nomis_combined_reporting_test           T1BIAUD'
          - 'nomis_combined_reporting_preproduction  PPBISYS'
          - 'nomis_combined_reporting_preproduction  PPBIAUD'
          - 'nomis_combined_reporting_production     PDBIPAUD'
          - 'nomis_combined_reporting_production     PDBISYS'
          - 'nomis_combined_reporting_production     PDBIAUD'
          - 'nomis_preproduction                     PPCNOM'
          - 'nomis_preproduction                     PPNDH'
          - 'nomis_preproduction                     PPTRDAT'
          - 'nomis_preproduction                     PPMIS'
          - 'nomis_preproduction                     PPCNMAUD'
          - 'nomis_preproduction                     LSCNOM'
          - 'nomis_preproduction                     LSMIS'
          - 'oasys_test                              T2BOSYS'
          - 'oasys_test                              T2BOAUD'
          - 'oasys_test                              T1OASYS'
          - 'oasys_test                              T1AZBIPI'
          - 'oasys_test                              T1ONRSYS'
          - 'oasys_test                              T1ONRBDS'
          - 'oasys_test                              T1ONRAUD'
          - 'oasys_test                              T1MISTRN'
          - 'oasys_test                              T1OASREP'
          - 'oasys_test                              T2OASYS'
          - 'oasys_test                              T2OASYS2'
          - 'oasys_test                              T2ONRSYS'
          - 'oasys_test                              T2ONRBDS'
          - 'oasys_test                              T2ONRAUD'
          - 'oasys_test                              T2MISTRN'
          - 'oasys_test                              T2OASREP'
          - 'oasys_test                              T2BIPINF'
          - 'oasys_test                              T1BIPINF'
          - 'oasys_preproduction                     PPBOSYS'
          - 'oasys_preproduction                     PPBOAUD'
          - 'oasys_preproduction                     PPBISY42'
          - 'oasys_preproduction                     PPBIAD42'
          - 'oasys_preproduction                     PPOASYS'
          - 'oasys_preproduction                     PPBIPINF'
          - 'oasys_production                        PDBOSYS'
          - 'oasys_production                        PDBOAUD'
          - 'oasys_production                        PDBIPINF'
          - 'oasys_production                        PROASYS'
          - 'oasys_production                        TROASYS'
          - 'oasys_production                        TRBIPINF'
          - 'oasys_national_reporting_test           T2BOSYS'
          - 'oasys_national_reporting_test           T2BOAUD'
          - 'oasys_national_reporting_preproduction  PPBOSYS'
          - 'oasys_national_reporting_preproduction  PPBOAUD'
          - 'oasys_national_reporting_production     PDBOSYS'
          - 'oasys_national_reporting_production     PDBOAUD'
      SourceConfigVersion:
        description: 'Branch/tag/commit for modernisation-platform-configuration-management'
        type: string
        default: 'main'

permissions:
  contents: read
  packages: read
  id-token: write

env:
  ansible_config: operations/playbooks/ansible.cfg
  command: roles/ansible/site.yml -e force_role=oracle-db-sql-baselines
  inventory: inventory/ansible

jobs:
  deployment:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ministryofjustice/hmpps-delius-operational-automation:0.80.0
    timeout-minutes: 1440
    continue-on-error: false
    steps:

      - name: Checkout Local Repo to get Composite Action
        uses: actions/checkout@v4

      - name: Setup Primary Database Access
        uses: ./.github/actions/setup_oracle_db_access
        with:
          TargetDatabase: "${{ github.event.inputs.TargetDatabase }}"
          SourceConfigVersion: "${{ github.event.inputs.SourceConfigVersion }}"

      - name: Fetch Required Roles & Site
        uses: actions/checkout@v5
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/roles/oracle-db-get-name
            ansible/site.yml
          path: roles
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Get Database Name
        run: |
             echo "The target_environment was ${{ steps.prepareinventorynames.outputs.target_environment }}"
             echo "The target_db_name was ${{ steps.prepareinventorynames.outputs.target_db_name }}"
             echo "The target_db_host was ${{ steps.prepareinventorynames.outputs.target_db_host }}"
             if [ ! -z "${{ steps.prepareinventorynames.outputs.target_db_name }}" ]
             then
                TARGET_DB_NAME_SWITCH="--extra-vars target_db_name=${{ steps.prepareinventorynames.outputs.target_db_name }}"
             fi
             if [ ! -z "${{ steps.prepareinventorynames.outputs.target_db_host }}" ]
             then
                TARGET_DB_HOST_LIMIT="--limit ${{ steps.prepareinventorynames.outputs.target_db_host }}"
             fi
             ansible-playbook \
                 -i $inventory \
                 --extra-vars "target=${{ steps.prepareinventorynames.outputs.target }}" \
                 ${TARGET_DB_NAME_SWITCH} ${TARGET_DB_HOST_LIMIT} \
                 --extra-vars force_role=oracle-db-get-name roles/ansible/site.yml
